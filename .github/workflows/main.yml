---
name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

env:
  FORCE_COLOR: "1"  # Make tools pretty.
  TOX_TESTENV_PASSENV: "FORCE_COLOR"


jobs:
  tests:
    name: "tox on ${{ matrix.python-version }}"
    runs-on: "ubuntu-latest"
    env:
      USING_COVERAGE: "2.7,3.7,3.8,3.10"

    strategy:
      fail-fast: false
      matrix:
        python-version: ["2.7", "3.5", "3.6", "3.7", "3.8", "3.9", "3.10", "pypy-2.7", "pypy-3.7"]

    steps:
      - uses: "actions/checkout@v2"
      - uses: "actions/setup-python@v2"
        with:
          python-version: "${{ matrix.python-version }}"

      - name: "Install dependencies"
        run: |
          python -VV
          python -m site
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install --upgrade coverage[toml] virtualenv tox tox-gh-actions

      - name: "Run tox targets for ${{ matrix.python-version }}"
        run: "python -m tox"

      - name: Upload coverage data
        uses: "actions/upload-artifact@v2"
        with:
          name: coverage-data
          path: ".coverage.*"
          if-no-files-found: ignore


  coverage:
    runs-on: "ubuntu-latest"
    needs: tests

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.10"  # Use latest, so it understands all syntax.

      - run: "python -m pip install --upgrade coverage[toml]"

      - name: "Download coverage data"
        uses: actions/download-artifact@v2
        with:
          name: coverage-data

      - run: python -m coverage combine
      - run: python -m coverage html --skip-covered --skip-empty

      - name: "Upload coverage report"
        uses: "actions/upload-artifact@v2"
        with:
          name: html-report
          path: htmlcov

      - run: python -m coverage report --fail-under=100

  package:
    name: "Build & verify package"
    runs-on: "ubuntu-latest"

    steps:
      - uses: "actions/checkout@v2"
      - uses: "actions/setup-python@v2"
        with:
          python-version: "3.10"

      - name: "Install build and lint tools"
        run: "python -m pip install build twine check-wheel-contents"
      - run: "python -m build --sdist --wheel ."
      - run: "ls -l dist"
      - run: "check-wheel-contents dist/*.whl"
      - name: "Check long_description"
        run: "python -m twine check dist/*"

  install-dev:
    name: "Verify dev env"
    runs-on: "${{ matrix.os }}"
    strategy:
      matrix:
        os: ["ubuntu-latest", "windows-latest", "macos-latest"]

    steps:
      - uses: "actions/checkout@v2"
      - uses: "actions/setup-python@v2"
        with:
          python-version: "3.10"
      - name: "Install in dev mode"
        run: "python -m pip install -e .[dev]"
      - name: "Import package"
        run: "python -c 'import attr; print(attr.__version__)'"
