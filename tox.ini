[tox]
min_version = 4
env_list =
    pre-commit,
    py3{7,8,9,10,11,12},
    pypy3,
    mypy,
    pyright,
    docs,
    changelog,
    coverage-report


[testenv]
extras = tests
commands = pytest {posargs:-n auto}
pass_env =
    SETUPTOOLS_SCM_PRETEND_VERSION
    FORCE_COLOR
    NO_COLOR


[testenv:py3{7,10,11}]
extras = cov
# Python 3.6+ has a number of compile-time warnings on invalid string escapes.
# PYTHONWARNINGS=d and --no-compile below make them visible during the tox run.
install_command = python -Im pip install --no-compile {opts} {packages}
set_env =
    COVERAGE_PROCESS_START={toxinidir}/pyproject.toml
    PYTHONWARNINGS=d
commands =
    python -c 'f = open("{env_site_packages_dir}/cov.pth", "w"); f.write("import coverage; coverage.process_startup()"); f.close()'
    coverage run -m pytest {posargs:-n auto}


[testenv:coverage-report]
# Keep base_python in-sync with .python-version-default
base_python = python3.11
depends = py3{7,10,11}
skip_install = true
deps = coverage[toml]>=5.3
commands =
    coverage combine
    coverage report


[testenv:docs]
# Keep base_python in-sync with ci.yml/docs and .readthedocs.yaml.
base_python = python3.11
extras = docs
commands =
    sphinx-build -n -T -W -b html -d {envtmpdir}/doctrees docs docs/_build/html
    sphinx-build -n -T -W -b doctest -d {envtmpdir}/doctrees docs docs/_build/html


[testenv:pre-commit]
skip_install = true
deps = pre-commit
commands = pre-commit run --all-files


[testenv:changelog]
deps = towncrier
skip_install = true
commands = towncrier build --version main --draft


[testenv:mypy]
deps = mypy>=0.991
commands =
    mypy src/attrs/__init__.pyi src/attr/__init__.pyi src/attr/_typing_compat.pyi src/attr/_version_info.pyi src/attr/converters.pyi src/attr/exceptions.pyi src/attr/filters.pyi src/attr/setters.pyi src/attr/validators.pyi
    mypy tests/typing_example.py


[testenv:pyright]
# Install and configure node and pyright
# This *could* be folded into a custom install_command
# Use nodeenv to configure node in the running tox virtual environment
# Seeing errors using "nodeenv -p"
# Use npm install -g to install "globally" into the virtual environment
deps = nodeenv
commands =
    nodeenv --prebuilt --node=lts --force {envdir}
    npm install -g --no-package-lock --no-save pyright
    pyright --version
    pytest tests/test_pyright.py -vv


[testenv:docset]
deps = doc2dash
extras = docs
allowlist_externals =
    rm
    cp
    tar
commands =
    rm -rf attrs.docset attrs.tgz docs/_build
    sphinx-build -n -T -W -b html -d {envtmpdir}/doctrees docs docs/_build/html
    doc2dash --index-page index.html --icon docs/_static/docset-icon.png --online-redirect-url https://www.attrs.org/en/latest/ docs/_build/html
    cp docs/_static/docset-icon@2x.png attrs.docset/icon@2x.png
    tar --exclude='.DS_Store' -cvzf attrs.tgz attrs.docset
