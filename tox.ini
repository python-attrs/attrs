# Keep docs in sync with docs env and .readthedocs.yml.
[gh-actions]
python =
    3.6: py36, mypy
    3.7: py37
    3.8: py38, changelog
    3.9: py39
    3.10: py310, mypy
    3.11: py311
    3.12: py312
    pypy-3: pypy3


[tox]
envlist = mypy,pre-commit,py36,py37,py38,py39,py310,py311,py312,pypy3,pyright,manifest,docs,pypi-description,changelog,coverage-report
isolated_build = True


[testenv:docs]
# Keep basepython in sync with ci.yml/docs and .readthedocs.yml.
basepython = python3.10
extras = docs
commands =
    sphinx-build -n -T -W -b html -d {envtmpdir}/doctrees docs docs/_build/html
    sphinx-build -n -T -W -b doctest -d {envtmpdir}/doctrees docs docs/_build/html

[testenv]
extras = tests
commands = python -m pytest {posargs:-n auto}


[testenv:py36]
extras = cov
setenv = COVERAGE_PROCESS_START={toxinidir}/pyproject.toml
commands = coverage run -m pytest {posargs:-n auto}


[testenv:py310]
extras = cov
setenv =
    PYTHONWARNINGS=d
    {[testenv:py36]setenv}
commands = {[testenv:py36]commands}


[testenv:py31{1,2}]
extras = cov
# Python 3.6+ has a number of compile-time warnings on invalid string escapes.
# PYTHONWARNINGS=d and --no-compile below make them visible during the Tox run.
install_command = python -m pip install --no-compile {opts} {packages}
setenv =
    PYTHONWARNINGS=d
    {[testenv:py36]setenv}
# xdist is currently broken on 3.11rc2
commands = coverage run -m pytest {posargs}


[testenv:coverage-report]
basepython = python3.10
depends = py36,py310
skip_install = true
deps = coverage[toml]>=5.3
commands =
    coverage combine
    coverage report


[testenv:pre-commit]
skip_install = true
deps = pre-commit
passenv = HOMEPATH  # needed on Windows
commands = pre-commit run --all-files --show-diff-on-failure


[testenv:manifest]
basepython = python3.10
deps = check-manifest
skip_install = true
commands = check-manifest


[testenv:pypi-description]
basepython = python3.8
skip_install = true
deps =
    twine
    pip >= 18.0.0
commands =
    pip wheel -w {envtmpdir}/build --no-deps .
    twine check {envtmpdir}/build/*


[testenv:changelog]
basepython = python3.8
deps = towncrier
skip_install = true
commands = towncrier build --version main --draft


[testenv:mypy]
deps = mypy>=0.902
commands =
    mypy src/attrs/__init__.pyi src/attr/__init__.pyi src/attr/_typing_compat.pyi src/attr/_version_info.pyi src/attr/converters.pyi src/attr/exceptions.pyi src/attr/filters.pyi src/attr/setters.pyi src/attr/validators.pyi
    mypy tests/typing_example.py


[testenv:pyright]
# Install and configure node and pyright
# This *could* be folded into a custom install_command
# Use nodeenv to configure node in the running tox virtual environment
# Seeing errors using "nodeenv -p"
# Use npm install -g to install "globally" into the virtual environment
deps = nodeenv
commands =
    nodeenv --prebuilt --node=lts --force {envdir}
    npm install -g --no-package-lock --no-save pyright
    pytest tests/test_pyright.py -vv


[testenv:docset]
deps = doc2dash
extras = docs
allowlist_externals =
    rm
    cp
    tar
commands =
    rm -rf attrs.docset attrs.tgz docs/_build
    sphinx-build -n -T -W -b html -d {envtmpdir}/doctrees docs docs/_build/html
    doc2dash --index-page index.html --icon docs/_static/docset-icon.png --online-redirect-url https://www.attrs.org/en/latest/ docs/_build/html
    cp docs/_static/docset-icon@2x.png attrs.docset/icon@2x.png
    tar --exclude='.DS_Store' -cvzf attrs.tgz attrs.docset
